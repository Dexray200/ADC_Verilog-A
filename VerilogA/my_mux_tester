// VerilogA for Lib, my_amux_tester, veriloga

`include "constants.vams"
`include "disciplines.vams"

// Using Event Driven for testing
`define PI 3.14159

module my_amux_tester(ana, sel, avdd, avss);
    output [1:0] ana;
    output sel; 
    output avdd, avss;

    electrical [1:0] ana;
    electrical sel;
    electrical avdd, avss;
    
    parameter real avdd_val = 3.3;
    parameter real f0 = 1000.0;
    parameter real f1 = 5000.0;
    parameter real Amp = 1.0;
    parameter real period = 5e-3;
    parameter real tpd = 0;
    parameter real trf = 20n;
    parameter real max_time_step = 1u;

    integer select;
    real sel_0;
    real offset;

    genvar j;

    analog begin
        @(initial_step) begin
            select = 0;
            sel_0 = 0;
            offset = avdd_val / 2.0;
        end
        V(avdd) <+ avdd_val;
        V(avss) <+ 0;

        $bound_step(max_time_step);
        V(ana[0]) <+ Amp * sin( 2 * `PI * f0 * $abstime);
        V(ana[1]) <+ Amp * sin( 2 * `PI * f1 * $abstime);

        for ( j = 0; j <= 1; j = j + 1) begin
            V(ana[j]) <+ offset;
        end

        @(timer(0, period)) begin
            case (select)
                0: begin
                    sel_0 = 0;
                end
                1: begin
                    sel_0 = avdd_val;
                end
            endcase
            select = (select + 1) % 2 ;
        end

        V(sel) <+ transition(sel_0, tpd, trf, trf);
    end

endmodule
